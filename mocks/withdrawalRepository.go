// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/igortoigildin/go-rewards-app/internal/service/domain/withdrawal (interfaces: WithdrawalRepository)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	withdrawal "github.com/igortoigildin/go-rewards-app/internal/entities/withdrawal"
)

// MockWithdrawalRepository is a mock of WithdrawalRepository interface.
type MockWithdrawalRepository struct {
	ctrl     *gomock.Controller
	recorder *MockWithdrawalRepositoryMockRecorder
}

// MockWithdrawalRepositoryMockRecorder is the mock recorder for MockWithdrawalRepository.
type MockWithdrawalRepositoryMockRecorder struct {
	mock *MockWithdrawalRepository
}

// NewMockWithdrawalRepository creates a new mock instance.
func NewMockWithdrawalRepository(ctrl *gomock.Controller) *MockWithdrawalRepository {
	mock := &MockWithdrawalRepository{ctrl: ctrl}
	mock.recorder = &MockWithdrawalRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWithdrawalRepository) EXPECT() *MockWithdrawalRepositoryMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockWithdrawalRepository) Create(arg0 context.Context, arg1 *withdrawal.Withdrawal) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockWithdrawalRepositoryMockRecorder) Create(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockWithdrawalRepository)(nil).Create), arg0, arg1)
}

// SelectAllForUserID mocks base method.
func (m *MockWithdrawalRepository) SelectAllForUserID(arg0 context.Context, arg1 int64) ([]withdrawal.Withdrawal, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SelectAllForUserID", arg0, arg1)
	ret0, _ := ret[0].([]withdrawal.Withdrawal)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SelectAllForUserID indicates an expected call of SelectAllForUserID.
func (mr *MockWithdrawalRepositoryMockRecorder) SelectAllForUserID(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SelectAllForUserID", reflect.TypeOf((*MockWithdrawalRepository)(nil).SelectAllForUserID), arg0, arg1)
}
