// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/igortoigildin/go-rewards-app/internal/api (interfaces: WithdrawalService)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	withdrawal "github.com/igortoigildin/go-rewards-app/internal/entities/withdrawal"
)

// MockWithdrawalService is a mock of WithdrawalService interface.
type MockWithdrawalService struct {
	ctrl     *gomock.Controller
	recorder *MockWithdrawalServiceMockRecorder
}

// MockWithdrawalServiceMockRecorder is the mock recorder for MockWithdrawalService.
type MockWithdrawalServiceMockRecorder struct {
	mock *MockWithdrawalService
}

// NewMockWithdrawalService creates a new mock instance.
func NewMockWithdrawalService(ctrl *gomock.Controller) *MockWithdrawalService {
	mock := &MockWithdrawalService{ctrl: ctrl}
	mock.recorder = &MockWithdrawalServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWithdrawalService) EXPECT() *MockWithdrawalServiceMockRecorder {
	return m.recorder
}

// Withdraw mocks base method.
func (m *MockWithdrawalService) Withdraw(arg0 context.Context, arg1 string, arg2 float64, arg3 int64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Withdraw", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(error)
	return ret0
}

// Withdraw indicates an expected call of Withdraw.
func (mr *MockWithdrawalServiceMockRecorder) Withdraw(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Withdraw", reflect.TypeOf((*MockWithdrawalService)(nil).Withdraw), arg0, arg1, arg2, arg3)
}

// WithdrawalsForUser mocks base method.
func (m *MockWithdrawalService) WithdrawalsForUser(arg0 context.Context, arg1 int64) ([]withdrawal.Withdrawal, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WithdrawalsForUser", arg0, arg1)
	ret0, _ := ret[0].([]withdrawal.Withdrawal)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// WithdrawalsForUser indicates an expected call of WithdrawalsForUser.
func (mr *MockWithdrawalServiceMockRecorder) WithdrawalsForUser(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WithdrawalsForUser", reflect.TypeOf((*MockWithdrawalService)(nil).WithdrawalsForUser), arg0, arg1)
}
